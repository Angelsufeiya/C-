//标题:字符串中找出连续最长的数字串
//	读入一个字符串str，输出字符串str中的连续最长的数字串
//输入描述 :
//一个测试输入包含1个测试用例，一个字符串str，长度不超过255。
//输出描述 : 
//在一行内输出str中里连续最长的数字串。 
//示例1 :
//输入
//	abcd12345ed125ss123456789
//输出
//	123456789








//标题 : 数组中出现次数超过一半的数字
//数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。
//例如输入一个长度为9的数组{ 1, 2, 3, 2, 2, 2, 5, 4, 2 }。
//由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。如果不存在则输出 0。


//#include<iostream>
//using namespace std;
//
//class A {
//public:
//	A(char* s)
//	{
//		cout << s << endl;
//	}
//	~A() {}
//};
//class B :virtual public A
//{
//public:
//	B(char* s1, char* s2) :A(s1) {
//		cout << s2 << endl;
//	}
//};
//class C :virtual public A
//{
//public:
//	C(char* s1, char* s2) :A(s1) {
//		cout << s2 << endl;
//	}
//};
//class D :public B, public C
//{
//public:
//	D(char* s1, char* s2, char* s3, char* s4) : B(s1, s2), C(s1, s3), A(s1)
//	{
//		cout << s4 << endl;
//	}
//};
//int main() {
//	D* p = new D("class A", "class B", "class C", "class D");
//	delete p;
//	return 0;
//}

